// JSX features needs configuration of the react environment.
// Install the required plugins in the ts_extra_tests directory, with the following instructions:
// npm install react
// npm i --save-dev @types/react
test_ts_cases/5.1/decoupled_type_checking_between_JSX_elements_and_JSX_tag_types/decoupled_type_checking_between_JSX_elements_and_JSX_tag_types_1.tsx
test_ts_cases/5.1/decoupled_type_checking_between_JSX_elements_and_JSX_tag_types/decoupled_type_checking_between_JSX_elements_and_JSX_tag_types_2.tsx
test_ts_cases/5.1/decoupled_type_checking_between_JSX_elements_and_JSX_tag_types/decoupled_type_checking_between_JSX_elements_and_JSX_tag_types_3.tsx
test_ts_cases/5.1/decoupled_type_checking_between_JSX_elements_and_JSX_tag_types/decoupled_type_checking_between_JSX_elements_and_JSX_tag_types_4.tsx
test_ts_cases/5.1/decoupled_type_checking_between_JSX_elements_and_JSX_tag_types/decoupled_type_checking_between_JSX_elements_and_JSX_tag_types_5.tsx
test_ts_cases/5.1/decoupled_type_checking_between_JSX_elements_and_JSX_tag_types/decoupled_type_checking_between_JSX_elements_and_JSX_tag_types_6.tsx
test_ts_cases/5.1/decoupled_type_checking_between_JSX_elements_and_JSX_tag_types/decoupled_type_checking_between_JSX_elements_and_JSX_tag_types_7.tsx
test_ts_cases/5.1/decoupled_type_checking_between_JSX_elements_and_JSX_tag_types/decoupled_type_checking_between_JSX_elements_and_JSX_tag_types_8.tsx
test_ts_cases/5.1/decoupled_type_checking_between_JSX_elements_and_JSX_tag_types/decoupled_type_checking_between_JSX_elements_and_JSX_tag_types_9.tsx
test_ts_cases/5.1/decoupled_type_checking_between_JSX_elements_and_JSX_tag_types/decoupled_type_checking_between_JSX_elements_and_JSX_tag_types_10.tsx
// The methods toReversed, toSpliced, toSorted, with are released in ES2023
// and they are not supported in the Typescript5.2 environment
test_ts_cases/5.2/copying_array_methods/copying_array_methods_1.ts
test_ts_cases/5.2/copying_array_methods/copying_array_methods_2.ts
test_ts_cases/5.2/copying_array_methods/copying_array_methods_3.ts
test_ts_cases/5.2/copying_array_methods/copying_array_methods_4.ts
test_ts_cases/5.2/copying_array_methods/copying_array_methods_5.ts
test_ts_cases/5.2/copying_array_methods/copying_array_methods_6.ts
test_ts_cases/5.2/copying_array_methods/copying_array_methods_7.ts
test_ts_cases/5.2/copying_array_methods/copying_array_methods_8.ts
test_ts_cases/5.2/copying_array_methods/copying_array_methods_9.ts
test_ts_cases/5.2/copying_array_methods/copying_array_methods_10.ts
test_ts_cases/5.2/copying_array_methods/copying_array_methods_11.ts
test_ts_cases/5.2/copying_array_methods/copying_array_methods_12.ts
// Because this feature is still fresh, most runtimes will not support it natively.
// To use it, you will need a polyfill for Symbol.metadata.
// Polyfill: Symbol.metadata ??= Symbol("Symbol.metadata").
// In TypeScript, it is necessary to add//@ ts ignore above this line of code,
// because Symbol.metadata is considered a read-only property in TypeScript and cannot be modified.
test_ts_cases/5.2/decorator_metadata/decorator_metadata_1.ts
test_ts_cases/5.2/decorator_metadata/decorator_metadata_2.ts
test_ts_cases/5.2/decorator_metadata/decorator_metadata_3.ts
test_ts_cases/5.2/decorator_metadata/decorator_metadata_4.ts
test_ts_cases/5.2/decorator_metadata/decorator_metadata_5.ts
test_ts_cases/5.2/decorator_metadata/decorator_metadata_6.ts
test_ts_cases/5.2/decorator_metadata/decorator_metadata_7.ts
test_ts_cases/5.2/decorator_metadata/decorator_metadata_8.ts
test_ts_cases/5.2/decorator_metadata/decorator_metadata_9.ts
test_ts_cases/5.2/decorator_metadata/decorator_metadata_10.ts
// this case import a .tsx file, it needs configuration of the react environment.
// Install the required plugins in the ts_extra_tests directory, with the following instructions:
// npm install react
// npm i --save-dev @types/react
test_ts_cases/5.2/type_only_import_paths_with_typeScript_implementation_file_extensions/implementation_file_extensions_2.ts
test_ts_cases/5.2/type_only_import_paths_with_typeScript_implementation_file_extensions/implementation_file_extensions_10.ts
// The test case failed to run in the default environment and needs to be manually installed typescript5.2
test_ts_cases/5.2/labeledelementdeclarations_may_hold_undefined_elements/labeledelementdeclarations_may_hold_undefined_elements_1.ts
test_ts_cases/5.2/labeledelementdeclarations_may_hold_undefined_elements/labeledelementdeclarations_may_hold_undefined_elements_2.ts
test_ts_cases/5.2/labeledelementdeclarations_may_hold_undefined_elements/labeledelementdeclarations_may_hold_undefined_elements_3.ts
test_ts_cases/5.2/labeledelementdeclarations_may_hold_undefined_elements/labeledelementdeclarations_may_hold_undefined_elements_4.ts
test_ts_cases/5.2/labeledelementdeclarations_may_hold_undefined_elements/labeledelementdeclarations_may_hold_undefined_elements_5.ts
test_ts_cases/5.2/labeledelementdeclarations_may_hold_undefined_elements/labeledelementdeclarations_may_hold_undefined_elements_6.ts
test_ts_cases/5.2/labeledelementdeclarations_may_hold_undefined_elements/labeledelementdeclarations_may_hold_undefined_elements_7.ts
test_ts_cases/5.2/labeledelementdeclarations_may_hold_undefined_elements/labeledelementdeclarations_may_hold_undefined_elements_8.ts
test_ts_cases/5.2/labeledelementdeclarations_may_hold_undefined_elements/labeledelementdeclarations_may_hold_undefined_elements_9.ts
test_ts_cases/5.2/labeledelementdeclarations_may_hold_undefined_elements/labeledelementdeclarations_may_hold_undefined_elements_10.ts
// The test case is intended to verify that the 'never' return type does not return an erroneous value.
// The failure of the test case is due to the use of the process.exit function, which terminates the Node.js process, causing the script to stop running.
test_ts_cases/3.7/better_support_for_never/better_support_for_never.ts
// In Windows environment, version 4.9.5 of tsc failed due to different interpretation of the toString method for '/n',
// whereas versions 5.0 and above of tsc in Windows environment as well as testing in Linux environment were successful.
test_ts_cases/4.2/abstract_construct_signatures/abstract_construct_signatures_2.ts
// Due to the presence of import or export, await cannot be recognized as a valid identifier for parsing.
// Errors such as 'Expression expected', 'Variable declaration expected', and 'Identifier expected' occur during the execution of the test case.
// Only in a context without import and export can await be used as a keyword.
test_ts_cases/spec/basic_concepts/names/reserved_words/special_mean_but_valid_identifier/await_is_valid_identifier_1.ts
test_ts_cases/spec/basic_concepts/names/reserved_words/special_mean_but_valid_identifier/await_is_valid_identifier_2.ts
test_ts_cases/spec/basic_concepts/names/reserved_words/special_mean_but_valid_identifier/await_is_valid_identifier_3.ts
test_ts_cases/spec/basic_concepts/names/reserved_words/special_mean_but_valid_identifier/await_is_valid_identifier_4.ts
// The imported file in this test case does not adhere to the CommonJS export rules.
// While TypeScript version 4.9 can compile the corresponding '.js' file, during the Node runtime,
// it may throw an error indicating that the imported module cannot be found.
// It is recommended to use the '.cjs' file extension in this case.
test_ts_cases/spec/scripts_and_modules/7_commonJS_modules/commonJS_modules_1.ts
// Seven of the new feature test cases in TypeScript version 5.2 need to be adapted to the higher versions of @types/node.
// If @types/node versions are too high, it will not match the version of @types/node in the chokidar file in the typescript directory, resulting in some test cases cannot pass.
// In order to avoid this situation, we choose a fixed @types/node version and mask the 7 test cases that require a higher version of @types/node.
// So we can control the @types/node version and mask the faulty ones.
test_ts_cases/5.2/using_declarations_and_explicit_resource_management/using_Declarations_1.ts
test_ts_cases/5.2/using_declarations_and_explicit_resource_management/using_Declarations_2.ts
test_ts_cases/5.2/using_declarations_and_explicit_resource_management/using_Declarations_3.ts
test_ts_cases/5.2/using_declarations_and_explicit_resource_management/using_Declarations_4.ts
test_ts_cases/5.2/using_declarations_and_explicit_resource_management/using_Declarations_5.ts
test_ts_cases/5.2/using_declarations_and_explicit_resource_management/using_Declarations_6.ts
test_ts_cases/5.2/using_declarations_and_explicit_resource_management/using_Declarations_7.ts