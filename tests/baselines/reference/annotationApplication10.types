=== tests/cases/conformance/annotations/annotationApplication10.ets ===
const enum E{
>E : E

    A,
>A : E.A

    B,
>B : E.B

    C
>C : E.C
}

@interface Anno {
    a: number
>a : number

    b: boolean
>b : boolean

    c: string
>c : string

    d: E[]
>d : E[]
}


@Anno({a: 10 + 20 / 2, b: (10 === 10), c: "a" + "b" + "c", d: [E.A, E.B, E.C]})
>Anno({a: 10 + 20 / 2, b: (10 === 10), c: "a" + "b" + "c", d: [E.A, E.B, E.C]}) : void
>Anno : typeof Anno
>{a: 10 + 20 / 2, b: (10 === 10), c: "a" + "b" + "c", d: [E.A, E.B, E.C]} : { a: number; b: boolean; c: string; d: E[]; }
>a : number
>10 + 20 / 2 : number
>10 : 10
>20 / 2 : number
>20 : 20
>2 : 2
>b : boolean
>(10 === 10) : boolean
>10 === 10 : boolean
>10 : 10
>10 : 10
>c : string
>"a" + "b" + "c" : string
>"a" + "b" : string
>"a" : "a"
>"b" : "b"
>"c" : "c"
>d : E[]
>[E.A, E.B, E.C] : E[]
>E.A : E.A
>E : typeof E
>A : E.A
>E.B : E.B
>E : typeof E
>B : E.B
>E.C : E.C
>E : typeof E
>C : E.C

class C {}
>C : C

