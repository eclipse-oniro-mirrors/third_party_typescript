=== tests/cases/compiler/a.ts ===
export default 1 + 1;
>1 + 1 : number
>1 : 1
>1 : 1


=== tests/cases/compiler/b.ts ===
export default { foo: 1 + 1 };
>{ foo: 1 + 1 } : { foo: number; }
>foo : number
>1 + 1 : number
>1 : 1
>1 : 1

=== tests/cases/compiler/c.ts ===
export default [{ foo: 1 + 1 }];
>[{ foo: 1 + 1 }] : { foo: number; }[]
>{ foo: 1 + 1 } : { foo: number; }
>foo : number
>1 + 1 : number
>1 : 1
>1 : 1

=== tests/cases/compiler/d.ts ===
export default [{ foo: 1 + 1 }] as const;
>[{ foo: 1 + 1 }] as const : readonly [{ readonly foo: number; }]
>[{ foo: 1 + 1 }] : readonly [{ readonly foo: number; }]
>{ foo: 1 + 1 } : { readonly foo: number; }
>foo : number
>1 + 1 : number
>1 : 1
>1 : 1

=== tests/cases/compiler/e.ts ===
export default [{ foo: 1 + 1 }] as const;
>[{ foo: 1 + 1 }] as const : readonly [{ readonly foo: number; }]
>[{ foo: 1 + 1 }] : readonly [{ readonly foo: number; }]
>{ foo: 1 + 1 } : { readonly foo: number; }
>foo : number
>1 + 1 : number
>1 : 1
>1 : 1

=== tests/cases/compiler/f.ts ===
const a = { foo: 1 };
>a : { foo: number; }
>{ foo: 1 } : { foo: number; }
>foo : number
>1 : 1

export default a;
>a : { foo: number; }

